#load relevant packages
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(tidyr)
library(zyp)
library(dismo)
library(gbm)
library(ggmap)
library(maptools)
library(MASS)
library(data.table)
library(scales)
library(lubridate)
library(ggridges)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(spatstat)
library(ggridges)
library(viridis)
library(cowplot)
library(sf)
library(ggmap)
library(raster)
library(maptools)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(bestNormalize)

#Fig 1: Ridgeplots####
Vanern.data<-fread("D:/DATN/RefitData_v6/Vanern.csv",stringsAsFactors = T)
Giles.data<-fread("D:/DATN/RefitData_v6/Giles.csv")
Trout.data<-fread("D:/DATN/RefitData_v6/TroutLake.csv",stringsAsFactors = T)
Kinneret.data<-fread("D:/DATN/RefitData_v6/Kinneret.csv",stringsAsFactors = T)
ridge.data<-rbind(Vanern.data,Trout.data,Giles.data,Kinneret.data)
ridge.data<-ridge.data[is.finite(fit)==TRUE&
                         is.finite(voldays)==TRUE]

#set density difference data
rm(densitydif.all)

for (lakename in unique(ridge.data$lake)){
  fitmin<-min(ridge.data[lake==lakename]$fit,na.rm=TRUE)
  fitmax<-max(ridge.data[lake==lakename]$fit,na.rm=TRUE)
  ridge.data.lake<-ridge.data[lake==lakename]
  ridge.data.lake$voldayssum<-0
  medianyear<-median(ridge.data.lake$year)
  ridge.data.lake<-ridge.data.lake[is.finite(fit)==TRUE&
                                     is.finite(voldays)==TRUE]
  ridge.data.lake[year<medianyear]$voldayssum<-sum(ridge.data.lake[year<medianyear]$voldays)
  ridge.data.lake[year>medianyear]$voldayssum<-sum(ridge.data.lake[year>medianyear]$voldays)
  ridge.data.lake<-ridge.data.lake[,voldays2:=voldays/voldayssum]
  
  densityX<-density(ridge.data.lake$fit,
                    from=fitmin,
                    to=fitmax)$x
  densityA<-density(ridge.data.lake[year<medianyear]$fit,
                    from=fitmin,
                    to=fitmax,
                    weights=ridge.data.lake[year<medianyear]$voldays2)$y
  densityB<-density(ridge.data.lake[year>medianyear]$fit,
                    from=fitmin,
                    to=fitmax,
                    weights=ridge.data.lake[year>medianyear]$voldays2)$y
  densitydif<-data.table(densityX,densityA,densityB)
  densitydif$lake<-lakename
  densitydif<-densitydif[,dif:=densityB-densityA]
  densitydif$difsign<-(densitydif$dif)<0
  densitydif<-densitydif[order(densityX)]
  densitydif$difsigngroup<-rleid(densitydif$difsign)
  
  # if the merged dataset does exist, append to it
  if (exists("densitydif.all")){densitydif.all<-rbindlist(list(densitydif.all,densitydif),fill=TRUE)}
  # if the merged dataset doesn't exist, create it
  if (!exists("densitydif.all")){densitydif.all<-densitydif}
}


#densitydif.all<-rbind
densitydif.all$lake<-as.factor(densitydif.all$lake)
densitydif.all<-densitydif.all[order(lake,densityX)]

#set ridge data
ridge.data<-ridge.data[order(lake,year)]
ridge.data$year<-as.factor(ridge.data$year)
ridge.data[is.integer(as.numeric(year)/5)==FALSE]$year<-droplevels(ridge.data[is.integer(as.numeric(year)/5)==FALSE]$year)

a<-ggplot(ridge.data[lake=="Vanern"], aes(x=fit,y=year,fill=..x..,
))+ 
  scale_fill_viridis(option = "B",breaks=c(.3,.4,.5,.6,.7),limits=c(-4,31.5))+
  geom_density_ridges_gradient(scale=3)+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Vanern"]$fit),
                                            max(ridge.data[lake=="Vanern"]$fit)))+
  scale_y_discrete(breaks=c(1960,1971,1980,1990,2000,2010))+
  theme_bw()+
  facet_wrap(~lake,nrow=1,scales="free")+
  theme(legend.position = "none",
        text = element_text(size=12),
        axis.text=element_text(size=8),
        axis.title.x=element_blank(),
        axis.text.x=element_blank())+
  labs(y="Year")

b<-ggplot()+
  geom_ribbon(data=densitydif.all[lake=="Vanern"],
              aes(ymin=0,
                  ymax=dif,
                  x=densityX,
                  fill=(dif<0),
                  group=difsigngroup))+
  scale_fill_manual(values=c("#43a2ca","#e34a33"))+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Vanern"]$fit),
                                            max(ridge.data[lake=="Vanern"]$fit)))+
  theme_bw()+
  labs(x="Temperature (째C)",
       y="Change")+
  guides(fill=FALSE)

c<-ggplot(ridge.data[lake=="Kinneret"], aes(x=fit,y=year,fill=..x..))+ 
  scale_fill_viridis(option = "B",breaks=c(.3,.4,.5,.6,.7),limits=c(-4,31.5))+
  geom_density_ridges_gradient(scale=3)+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Kinneret"]$fit),
                                            max(ridge.data[lake=="Kinneret"]$fit)))+
  scale_y_discrete(breaks=c(1960,1971,1980,1990,2000,2010))+
  theme_bw()+
  facet_wrap(~lake,nrow=1,scales="free")+
  theme(legend.position = "none",
        text = element_text(size=12),
        axis.text=element_text(size=8),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.title.y=element_blank())+
  labs(y="Year")

d<-ggplot()+
  geom_ribbon(data=densitydif.all[lake=="Kinneret"],
              aes(ymin=0,
                  ymax=dif,
                  x=densityX,
                  fill=(dif<0),
                  group=difsigngroup))+
  scale_fill_manual(values=c("#43a2ca","#e34a33"))+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Kinneret"]$fit),
                                            max(ridge.data[lake=="Kinneret"]$fit)))+
  theme_bw()+
  theme(axis.title.y=element_blank())+
  labs(x="Temperature (째C)",
       y="Change")+
  guides(fill=FALSE)

e<-ggplot(ridge.data[lake=="Giles"], aes(x=fit,y=year,fill=..x..))+ 
  scale_fill_viridis(option = "B",breaks=c(.3,.4,.5,.6,.7),limits=c(-4,31.5))+
  geom_density_ridges_gradient(scale=3)+#,quantile_lines=TRUE,quantiles=2)+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Giles"]$fit),
                                            max(ridge.data[lake=="Giles"]$fit)))+
  scale_y_discrete(breaks=c(1960,1971,1980,1990,2000,2010))+
  theme_bw()+
  facet_wrap(~lake,nrow=1,scales="free")+
  theme(legend.position = "none",
        text = element_text(size=12),
        axis.text=element_text(size=8),
        axis.title.x=element_blank(),
        axis.text.x=element_blank())+
  labs(y="Year")

f<-ggplot()+
  geom_ribbon(data=densitydif.all[lake=="Giles"],
              aes(ymin=0,
                  ymax=dif,
                  x=densityX,
                  fill=(dif<0),
                  group=difsigngroup))+
  scale_fill_manual(values=c("#43a2ca","#e34a33"))+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="Giles"]$fit),
                                            max(ridge.data[lake=="Giles"]$fit)))+
  theme_bw()+
  labs(x="Temperature (째C)",
       y="Change")+
  guides(fill=FALSE)

g<-ggplot(ridge.data[lake=="TroutLake"], aes(x=fit,y=year,fill=..x..))+ 
  scale_fill_viridis(option = "B",breaks=c(.3,.4,.5,.6,.7),limits=c(-4,31.5))+
  geom_density_ridges_gradient(scale=3)+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="TroutLake"]$fit),
                                            max(ridge.data[lake=="TroutLake"]$fit)))+
  scale_y_discrete(breaks=c(1960,1971,1980,1990,2000,2010))+
  theme_bw()+
  facet_wrap(~lake,nrow=1,scales="free")+
  theme(legend.position = "none",
        text = element_text(size=12),
        axis.text=element_text(size=8),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.title.y=element_blank())+
  labs(y="Year")

h<-ggplot()+
  geom_ribbon(data=densitydif.all[lake=="TroutLake"],
              aes(ymin=0,
                  ymax=dif,
                  x=densityX,
                  fill=(dif<0),
                  group=difsigngroup))+
  scale_fill_manual(values=c("#43a2ca","#e34a33"))+
  scale_x_continuous(expand=c(0,0),limits=c(min(ridge.data[lake=="TroutLake"]$fit),
                                            max(ridge.data[lake=="TroutLake"]$fit)))+
  theme_bw()+
  theme(axis.title.y=element_blank())+
  labs(x="Temperature (째C)",
       y="Change")+
  guides(fill=FALSE)

plot_grid(a,c,b,d,e,g,f,h,nrow=4,ncol=2,rel_heights = c(8,3,6,3),align="v")

#Fig 2####
#DATN_predict<-fread("D:/DATN/DATN_predict_std_v32.csv",header=TRUE,stringsAsFactors = TRUE)
EDdata.lakemeans<-fread("D:/DATN/DATN_EDdata.lakes_v45.csv",stringsAsFactors = T)
lakeinfo<-fread("D:/DATN/DATA_datn_HydroLakesInfo_v2.csv",header=TRUE,stringsAsFactors = TRUE) #needs editing
EDdata.lakes<-merge(EDdata.lakemeans,lakeinfo)

EDdata.spatial<-fread("D:/DATN/DATN_EDdata.spatial_v42b.csv",stringsAsFactors = T)
EDdata.spatial<-EDdata.spatial[,EDmean.std:=EDmean-EDmean.null]
EDdata.spatial<-EDdata.spatial[,.(EDmean.std=mean(EDmean.std)),.(lakeA)]
EDdata.spatiotempA<-EDdata.spatial[,2]
EDdata.spatiotempA[,EDtype:="Spatial 
(Among Lakes)"]
EDdata.spatiotempB<-EDdata.lakes[,2]
EDdata.spatiotempB[,EDtype:="Temporal 
(Across Time)"]

EDdata.spatiotemp<-rbind(EDdata.spatiotempA,EDdata.spatiotempB,use.names=FALSE)
EDdata.spatiotemp$EDtype<-as.factor(EDdata.spatiotemp$EDtype)
EDdata.spatiotemp.exp<-data.table(expand.grid(EDdata.spatial$EDmean.std,EDdata.lakes$EDmean))
EDdata.spatiotemp.exp<-EDdata.spatiotemp.exp[,EDstprop:=abs(Var2)/abs(Var1)]

EDdata.spatiotemp.ribbon<-data.frame(x=density(EDdata.spatiotemp[EDtype=="Temporal 
(Across Time)"]$EDmean.std,n=1024)$x,
                                     y=density(EDdata.spatiotemp[EDtype=="Temporal 
(Across Time)"]$EDmean.std,n=1024)$y)
summary(EDdata.spatiotemp.ribbon)
EDdata.spatiotemp.ribbon$y<-(EDdata.spatiotemp.ribbon$y/max(EDdata.spatiotemp.ribbon$y))*
  max(density(EDdata.spatiotemp$EDmean.std)$y)

world <- ne_countries(scale = "medium", returnclass = "sf")
world<-st_transform(world,"+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")

EDdata.lakes<-st_as_sf(EDdata.lakes,coords = c("lon", "lat"),crs=4326)
EDdata.lakes<-st_transform(EDdata.lakes,"+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")

scaleFUN1 <- function(x) sprintf("%.1f", x)
scaleFUN2 <- function(x) sprintf("%.2f", x)

c<-ggplot(data=world)+
  geom_sf(fill="darkgrey",colour="grey")+
  geom_sf(data=EDdata.lakes#[lake!="Chignik"&lake!="Emerald"]
             ,
             aes(colour=rank(EDmean)),size=2.5)+
  scale_colour_viridis(breaks=c(25,50,80,115),labels=c("0.035","0.04","0.045","0.05"))+
  theme_bw()+
  theme(text = element_text(size=12),
        panel.grid.major = element_line(colour="grey"),
        #panel.grid.minor = element_blank(),
        #axis.line = element_line(colour = "black"),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.y=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        panel.border = element_blank(),
        axis.title.y =element_blank(),
        legend.position = c(0.15, 0.48)
        )+
  labs(colour="Thermal 
Novelty")
  
a<-ggplot()+
  geom_density(data=EDdata.spatiotemp[EDtype=="Spatial 
(Among Lakes)"],aes(x=EDmean.std),fill="burlywood4")+
  geom_segment(data=EDdata.spatiotemp.ribbon,aes(x=x,xend=x,y=0,yend=y,colour=((x))),size=1.5)+
  scale_x_continuous(trans="log10",labels = scaleFUN2)+
  scale_colour_viridis(values=c(0,.053,.066,.085,.115,1),
    guide=FALSE)+
  theme_bw()+ 
  theme(legend.position = c(0.8, 0.8))+
  labs(x="Thermal Novelty and 
Spatial Thermal Dissimilairty Among Lakes",
       y="Density",
       fill=NULL)+
  annotate(geom="text",x=.12,y=1.3,label="Thermal 
Novelty

(n = 139)",colour="#3CBB75FF",fontface="bold")+
  annotate(geom="text",x=8,y=0.8,label="     Spatial Thermal 
 Dissimilarity 
  Among Lakes
   
 (n = 19,182)",colour="burlywood4",fontface="bold")
  
b<-ggplot()+
  geom_density(data=EDdata.spatiotemp.exp,aes(EDstprop*100),
                                          #..scaled..,
                                          fill="firebrick4",
               adjust=1.5)+
  scale_x_continuous(trans="log10",labels = scaleFUN1)+
  scale_y_continuous(limits=c(0,1))+
  theme_bw()+
  labs(x="Thermal Novelty 
(as % of Spatial Thermal Dissimilairty Among Lakes)",
       y="Density")+
  annotate(geom="text",x=20,y=0.8,label="Thermal Novelty 
Spatial Thermal Dissimilarity Among Lakes

                                             (n = 139 * 19,182 = 2,666,298)",colour="firebrick4",fontface="bold")+
  geom_segment(aes(x=.2,xend=1900,y=0.9,yend=0.9),colour="firebrick4")+
  annotate(geom="text",x=0.1,y=0.9,label="100*",colour="firebrick4",fontface="bold")

ab<-plot_grid(a,b,align="hv")
abc<-plot_grid(ab,c,nrow=2,rel_heights = c(.6,1))
abc

#Fig 3: Mean ED across didfferent sensitivities####
EDdata.splits.interp<-fread("D:/DATN/DATN_EDdata.splits.interp.std2_v42.csv",stringsAsFactors = T)

#add separate panels for individual lakes
EDdata.lakesplits.interp<-fread("D:/DATN/DATN_EDdata.lakesplits.interp.std2_v42.csv",stringsAsFactors = T)
summary(EDdata.lakesplits.interp)
EDdata.lakesplits.interp_sub<-EDdata.lakesplits.interp[lake=="Annie"|
                                                         lake=="Muggelsee"|
                                                         lake=="Heney"|
                                                         lake=="Zurich"|
                                                         lake=="Tanganyika"|
                                                         lake=="Baikal"]

a<-ggplot()+
  geom_raster(data=EDdata.splits.interp,
              aes(x=abs(doymaxdist-1.1),
                  y=abs(depthmaxdist-1.1),
                  fill=EDmean),
              interpolate=T)+
  scale_fill_viridis(trans="log",breaks=c(.001,.002,.004,.008,.016,.032,.064,.128,.256))+
  geom_contour(data=EDdata.splits.interp,
               aes(x=abs(doymaxdist-1.1),
                   y=abs(depthmaxdist-1.1),
                   z=EDmean),
               colour="white")+
  scale_y_continuous(expand=c(0,0))+
  scale_x_continuous(expand=c(0,0))+
  theme_bw()+
  labs(x="Seasonal shift limit (proportion of maximum)",
       y="Depth shift limit (proportion of maximum)",
       fill="Thermal 
Novelty")

b<-ggplot()+
  geom_raster(data=EDdata.lakesplits.interp_sub,
              aes(x=abs(doymaxdist-1.1),
                  y=abs(depthmaxdist-1.1),
                  fill=EDmean),
              interpolate=T)+
  scale_fill_viridis(trans="log",breaks=c(.001,.002,.004,.008,.016,.032,.064,.128,.256))+
  geom_contour(data=EDdata.lakesplits.interp_sub,
               aes(x=abs(doymaxdist-1.1),
                   y=abs(depthmaxdist-1.1),
                   z=EDmean),
               colour="white")+
  scale_y_continuous(expand=c(0,0))+
  scale_x_continuous(expand=c(0,0))+
  facet_wrap(.~lake)+
  theme_bw()+
  theme(panel.spacing.x = unit(7, "mm"))+
  labs(x="Seasonal shift limit (proportion of maximum)",
       y="Depth shift limit (proportion of maximum)",
       fill="Thermal 
Novelty")

plot_grid(a,b,ncol=1,rel_heights = c(2,1.7))

####FIG 4: Effects on thermal novelty from lake characteristics across gradients of depth and doy limitations####
DATN_predict_new<-fread("D:/DATN/DATN_predict_new.means_v44.csv",header=TRUE,stringsAsFactors = TRUE)
DATN_predict.fit<-fread("D:/DATN/DATN_predict.fit_v43.csv",header=TRUE,stringsAsFactors = TRUE)
lakeinfo<-unique(DATN_predict.fit[,c(1,13,25)])

a<-ggplot()+
  geom_density(data=(lakeinfo),aes(MeanDepth),colour="darkgrey",fill="darkgrey",adjust=4)+
  scale_x_continuous(trans="log",breaks=c(1,5,25,100,500),expand=c(0,0))+
  theme_void()

b<-ggplot()+
  geom_density(data=(lakeinfo),aes(temp_mean),colour="darkgrey",fill="darkgrey",adjust=4)+
  scale_x_continuous(trans="log",breaks=c(5,10,15,20,25),expand=c(0,0))+
  theme_void()

c<-ggplot()+
  geom_smooth(data=DATN_predict_new[type==1],
              aes(y=predicted_EDmean.std2,
                  x=exp(logMeanDepth),
                  colour=as.factor(abs(doymaxdist-1.1))),se=FALSE,method="loess",span=.8)+
  labs(x="Mean depth (m)",
       y="Thermal Novelty",
       colour="Seasonal shift limit 
(proportion of maximum)")+
  scale_x_continuous(trans="log",breaks=c(1,5,25,100,500),expand=c(0,0))+
  coord_cartesian(ylim = c(0,0.2))+
  scale_colour_manual(values=rev(c("#005a32","#238443","#41ab5d","#78c679","#addd8e","#d9f0a3")))+
  theme_bw()+
  theme(panel.grid.minor = element_blank())+
  guides(colour=FALSE)

d<-ggplot()+
  geom_smooth(data=DATN_predict_new[depthmaxdist==1.1&
                                      type==2],
              aes(y=predicted_EDmean.std2,
                  x=temp_mean,
                  colour=as.factor(abs(doymaxdist-1.1))),se=FALSE,method="loess",span=.8)+
  labs(x="Temperature (째C)",
       y="Thermal Novelty",
       colour="Seasonal shift limit 
(proportion of maximum)")+
  scale_x_continuous(breaks=c(5,10,15,20,25),expand=c(0,0))+
  coord_cartesian(ylim = c(0,0.2))+
  scale_colour_manual(values=rev(c("#005a32","#238443","#41ab5d","#78c679","#addd8e","#d9f0a3")))+
  theme_bw()+
  theme(panel.grid.minor = element_blank())+
  guides(colour = guide_legend(reverse = TRUE))

e<-ggplot()+
  geom_smooth(data=DATN_predict_new[doymaxdist==1.1&
                                      type==3],
              aes(y=predicted_EDmean.std2,
                  x=exp(logMeanDepth),
                  colour=as.factor(abs(depthmaxdist-1.1))),se=FALSE,method="loess",span=.8)+
  labs(x="Mean depth (m)",
       y="Thermal Novelty",
       colour="Depth shift limit 
(proportion of maximum)")+
  scale_x_continuous(trans="log",breaks=c(1,5,25,100,500),expand=c(0,0))+
  coord_cartesian(ylim = c(0,0.2))+
  scale_colour_manual(values=rev(c("#7a0177","#ae017e","#dd3497","#f768a1","#fa9fb5","#fcc5c0")))+
  theme_bw()+
  theme(panel.grid.minor = element_blank())+
  guides(colour=FALSE)

f<-ggplot()+
  geom_smooth(data=DATN_predict_new[doymaxdist==1.1&
                                      type==4],
              aes(y=predicted_EDmean.std2,
                  #x=exp(logMeanDepth),
                  x=temp_mean,
                  colour=as.factor(abs(depthmaxdist-1.1))),se=FALSE,method="loess",span=.8)+
  labs(x="Temperature (째C)",
       y="Thermal Novelty",
       colour="Depth shift limit 
(proportion of maximum)")+
  scale_x_continuous(breaks=c(5,10,15,20,25),expand=c(0,0))+
  coord_cartesian(ylim = c(0,0.2))+
  scale_colour_manual(values=rev(c("#7a0177","#ae017e","#dd3497","#f768a1","#fa9fb5","#fcc5c0")))+
  theme_bw()+
  theme(panel.grid.minor = element_blank())+
  guides(colour = guide_legend(reverse = TRUE))

ace<-plot_grid(a,c,e,ncol=1,rel_heights = c(1,3,3),align="v", axis = "lr")
bdf<-plot_grid(b,d,f,ncol=1,rel_heights = c(1,3,3),align="v", axis = "lr")
plot_grid(ace,bdf,ncol=2,rel_widths = c(.65,1))

plot_grid(a,b,c,d,e,f,ncol=2,rel_widths = c(1,1),rel_heights = c(1,3,3),align="v", axis = "lr")
